version: "3.8"

services:
  fastapi:
      build:
        context: .
        dockerfile: fastapi-app/Dockerfile
      container_name: fastapi
      ports:
        - "8000:8000"
      networks:
        - legislative_analysis_network
      volumes:
        - ./fastapi-app:/app
        - ./shared:/app/shared
      environment:
        - DATABASE_URL=postgresql://user:password@db:5432/civicdb
      depends_on: # MODIFIED - FastAPI now depends on the databases
        db:
          condition: service_healthy
        chromadb:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      # Run Uvicorn in reload mode, watching /app for changes
      command:
        - uvicorn
        - main:app
        - --host
        - "0.0.0.0"
        - --port
        - "8000"
        - --reload
        - --reload-dir
        - /app

  db:
    image: postgres:16-alpine
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password # CHANGE THESE credentials
      - POSTGRES_DB=civicdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d civicdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - legislative_analysis_network

  chromadb:
    image: chromadb/chroma:1.0.12
    container_name: chromadb
    ports:
      - "8001:8000"                # map host 8001 → container 8000
    volumes:
      - ./chromadb:/chroma/chroma # persist data locally
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - legislative_analysis_network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    networks:
      - legislative_analysis_network
    tty: true
    restart: always

  # open-webui:
  #   image: ghcr.io/open-webui/open-webui:main
  #   container_name: open-webui
  #   volumes:
  #     - open-webui:/app/backend/data
  #   depends_on:
  #     - ollama
  #   ports:
  #     - 3000:8080
  #   environment:
  #     - 'OLLAMA_BASE_URL=http://ollama:11434'
  #     - 'WEBUI_SECRET_KEY='
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   networks:
  #     - legislative_analysis_network
  #   restart: unless-stopped

  react:
     build:
       context: .
       dockerfile: react-app/Dockerfile.dev   # a "Dockerfile.dev" that just does `npm install` + `npm run dev`
     container_name: react-dev
     volumes:
       - ./react-app:/app             # your source in
       - /app/node_modules            # keep container’s node_modules
     ports:
       - "8050:5173"                  # map host:container (Vite default 5173)
         # (If you’re on CRA swap to "8050:3000")
     networks:
       - legislative_analysis_network
     depends_on:
       - fastapi
     environment:
       - CHOKIDAR_USEPOLLING=true     # (optional) if file‐watching flakes out
       - CHOKIDAR_INTERVAL=100
     command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

networks:
  legislative_analysis_network:
    driver: bridge

volumes:
  pgdata: {}
  ollama: {}
  open-webui: {}